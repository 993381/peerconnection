// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from janus-client.djinni

#pragma once

#include <memory>
#include <string>

namespace Janus {

class Bundle;
class JanusEvent;
struct JanusError;

class ProtocolDelegate {
public:
    virtual ~ProtocolDelegate() {}

    virtual void onReady() = 0;

    virtual void onClose() = 0;

    virtual void onError(const JanusError & error, const std::shared_ptr<Bundle> & context) = 0;

    virtual void onEvent(const std::shared_ptr<JanusEvent> & event, const std::shared_ptr<Bundle> & context) = 0;

    virtual void onHangup(const std::string & reason) = 0;
};

class JanusProxyProtocolDelegate final : public ProtocolDelegate
{
public:
    JanusProxyProtocolDelegate();
    ~JanusProxyProtocolDelegate() = default;

    void onReady() override;
    void onClose() override;
    void onError(const ::Janus::JanusError & error, const std::shared_ptr<::Janus::Bundle> & context) override;
    void onEvent(const std::shared_ptr<::Janus::JanusEvent> & event, const std::shared_ptr<::Janus::Bundle> & context) override;
    void onHangup(const std::string & reason) override;
};


JanusProxyProtocolDelegate::JanusProxyProtocolDelegate(){}
void JanusProxyProtocolDelegate::onReady() {
	
}

void JanusProxyProtocolDelegate::onClose() {
	
}

void JanusProxyProtocolDelegate::onError(const ::Janus::JanusError & c_error, const std::shared_ptr<::Janus::Bundle> & c_context) {
	
}

void JanusProxyProtocolDelegate::onEvent(const std::shared_ptr<::Janus::JanusEvent> & c_event, const std::shared_ptr<::Janus::Bundle> & c_context) {
	
}

void JanusProxyProtocolDelegate::onHangup(const std::string & c_reason) {
	
}

}  // namespace Janus
